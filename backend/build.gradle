

buildscript{
	ext {
		springBootVer = '2.5.2'
		querydslVer = '4.4.0'
		querydslPluginVer = '1.0.10'
		springDependencyMgmtVer = '1.0.11'
		springLoadedVer = '1.2.8'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVer}"
		classpath "io.spring.gradle:dependency-management-plugin:${springDependencyMgmtVer}.RELEASE"
		classpath "org.springframework:springloaded:${springLoadedVer}.RELEASE"
	}
}

plugins {
	id 'java'
	id 'idea'
	id 'org.springframework.boot' version "${springBootVer}"
}

apply plugin: 'io.spring.dependency-management'

group = 'com.oceandiary'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	providedRuntime
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/snapshot' }
	maven { url 'https://repo.spring.io/milestone' }
	maven { url "https://repo.spring.io/libs-release" }
	maven { url "https://repo.maven.apache.org/maven2" }
	maven { url "https://build.shibboleth.net/nexus/content/repositories/releases" }
}

//set build time and inject value to application.properties
def buildTime() {
	def date = new Date()
	def formattedDate = date.format('yyyyMMdd_HHmm')
	return formattedDate
}

project.ext.set("build.date", buildTime())


dependencies {

	// skeleton에서 가져온 dependencies [시작]
	implementation("org.springframework.plugin:spring-plugin-core:2.0.0.RELEASE")
	implementation('commons-io:commons-io:2.6')
	implementation("org.apache.commons:commons-collections4:4.4")
	implementation("org.apache.commons:commons-lang3:3.9")

	implementation("com.querydsl:querydsl-jpa:${querydslVer}")
	implementation("com.querydsl:querydsl-apt:${querydslVer}")

	implementation("org.springframework.boot:spring-boot-starter-mustache")
	implementation('org.webjars.bower:jquery:3.3.1')
	implementation('org.webjars:sockjs-client:1.1.2')
	implementation('org.webjars:stomp-websocket:2.3.3-1')
	implementation('org.webjars:webjars-locator:0.30')

	annotationProcessor("com.querydsl:querydsl-apt:${querydslVer}:jpa")

	testImplementation("com.jayway.jsonpath:json-path:2.4.0")

	implementation("com.auth0:java-jwt:3.10.3")

	implementation("io.springfox:springfox-swagger2:3.0.0")
	implementation("io.springfox:springfox-swagger-ui:3.0.0")
	implementation("io.springfox:springfox-data-rest:3.0.0")
	implementation("io.springfox:springfox-bean-validators:3.0.0")
	implementation("io.springfox:springfox-boot-starter:3.0.0")

	implementation 'javax.annotation:javax.annotation-api:1.2'
	//[끝]


	// 초기 프로젝트 생성시 설정한 dependencies [시작]
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	// [끝]


	// 추후에 추가한 dependencies [시작]
	// jwt 관련 의존성
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'

	// openvidu 관련 의존성
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'io.openvidu:openvidu-java-client:2.22.0'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor("jakarta.persistence:jakarta.persistence-api")
	annotationProcessor("jakarta.annotation:jakarta.annotation-api")
	testImplementation('org.mockito:mockito-inline:3.4.0')
	testImplementation('org.mockito:mockito-core:3.4.0')
	testImplementation('org.mockito:mockito-junit-jupiter:3.4.0')

	//embedded-redis 관련 의존성
	implementation group: 'it.ozimov', name: 'embedded-redis', version: '0.7.1'

	// [끝]
}

tasks.named('test') {
	useJUnitPlatform()
}
